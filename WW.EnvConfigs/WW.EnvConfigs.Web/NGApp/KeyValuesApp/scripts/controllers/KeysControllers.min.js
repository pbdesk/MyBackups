var KeyListController=function(n,t,i){n.isBusy=!1;n.data=t.Keys;n.sortField="KeyName";n.CurrentFrameworkId=MyApp.CURRENT_FRAMEWORK_ID;n.CurrentFrameworkName="";t.IsReady()==!1&&(n.isBusy=!0,t.GetKeys(n.CurrentFrameworkId,!1).then(function(t){t.length>0&&(n.CurrentFrameworkName=t[0].WWFramework.Name);ToastSuccess(t.length+" Keys Loaded.")},function(){ToastError("Error getting list of keys. [KeyListController]")}).then(function(){n.isBusy=!1}));n.Refresh=function(){n.isBusy=!0;t.GetKeys(n.CurrentFrameworkId,!0).then(function(){},function(){alert("Error")}).then(function(){n.isBusy=!1})};n.SetInitStateForKeyValueFactoryToFalse=function(){i.SetInitState(!1)}},KeyCreateController,KeyEditController;KeyListController.$inject=["$scope","KeysFactory","KeyValueFactory"];KeyCreateController=function(n,t,i){n.PageHeading="Create New Key";n.NewKey={};n.NewKey.CreatedBy=MyApp.CURRENT_USERNAME;n.NewKey.WWFrameworkId=MyApp.CURRENT_FRAMEWORK_ID;n.NewKey.IsActive=!0;n.Save=function(){i.CreateKey(n.NewKey).then(function(){t.location="#/"},function(){alert("Error in save[KeyCreateController]")})};n.cancel=function(){}};KeyCreateController.$inject=["$scope","$window","KeysFactory"];KeyEditController=function(n,t,i,r){var u;n.PageHeading="Edit Key";var f=null,e=null,o=t.Id;o>0&&(u=r.GetKey(o),f=$.extend(!0,{},u),e=$.extend(!0,{},u),n.NewKey=e);n.Save=function(t){r.UpdateKey(n.NewKey).then(function(n){i.location=t===!1?"#/":"#/KeyValues/"+n.Id},function(){alert("Error in Update")})};n.cancel=function(){angular.copy(f,n.NewKey)}};KeyEditController.$inject=["$scope","$routeParams","$window","KeysFactory"];